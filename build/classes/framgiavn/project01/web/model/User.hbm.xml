<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Mapping file autogenerated by MyEclipse Persistence Tools -->
<hibernate-mapping>
	<class name="framgiavn.project01.web.model.User" table="User"
		dynamic-insert="true" dynamic-update="true">
		<id name="id" type="java.lang.Integer">
			<column name="id" length="10" />
			<!--   <generator class="assigned" /> -->
			<generator class="increment" />
		</id>

		<property name="username" type="java.lang.String">
			<column name="username" length="20" />
		</property>

		<property name="password" type="java.lang.String">
			<column name="password" length="16" />
		</property>

		<property name="email" type="java.lang.String">
			<column name="email" length="30" />
		</property>

		<property name="avatar" type="java.lang.String">
			<column name="avatar" length="255" />
		</property>

		<property name="isAdmin" type="java.lang.Boolean">
			<column name="is_admin" not-null="true" />
		</property>
	</class>
	<query name="User.SelectUserByUserId">
		select user
		from User user
		where user.id =
		:userId
	</query>
	<query name="User.SearchUserByUser">
		select user 
		from User user 
		where user.email = :email and 
			user.password = :password
	</query>
	<query name="User.SelectUserByEmail">
		select user
		from User user
		where user.email = :email
	</query>
	<query name="User.GetFollowingListByUserId">
    	select user
    	from User user, Relationship relationship 
    	where relationship.followerId = :user_id and
    		user.id = relationship.followingId
    </query>
    <query name="User.GetActivityListByUserId">
		from Activity activity
		where activity.userId = :user_id 
    </query>
    <query name="User.GetWordLearnedListByUserId">
        select distinct word
    	from LessonWord lessonWord, Word word, Lesson lesson
    	where  lesson.userId = :user_id and
    		lessonWord.lessonId = lesson.id and
    	    lessonWord.wordId = word.id and
    		lessonWord.wordAnswerId is not null
    </query>
</hibernate-mapping>